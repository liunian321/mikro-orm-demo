type User {
    id: ID!
    name: String!
    email: String
    createdAt: DateTime!
    updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CategoryEntity {
    id: ID!
    name: String!
}

type PostEntity {
    id: ID!
    title: String!
    content: String!
    version: Float!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Query {
    """查询帖子"""
    queryPost(input: QueryPostInput!): [PostEntity!]!

    """获取用户"""
    getUser(id: String!): User!

    """查询分类"""
    query(input: CategoryInput!): CategoryEntity!
}

input QueryPostInput {
    title: String
    userId: String
}

input CategoryInput {
    name: String!
}

type Mutation {
    """创建帖子"""
    createPost(input: CreatePostInput!): PostEntity!

    """删除帖子"""
    deletePost(id: Float!): Boolean!

    """更新帖子"""
    updatePost(input: UpdatePostInput!): PostEntity!

    """创建用户"""
    createUser(input: UserInput!): User!

    """删除用户"""
    deleteUser(id: String!): Boolean!

    """修改资料"""
    updateUser(input: UserInput!): Boolean!

    """创建分类"""
    create(input: CategoryInput!): CategoryEntity!

    """删除分类"""
    delete(id: Float!): CategoryEntity!

    """更新分类"""
    update(input: UpdateCategoryInput!): CategoryEntity!
}

input CreatePostInput {
    title: String!
    userId: String!
    content: String!
}

input UpdatePostInput {
    postId: Float!
    title: String!
    content: String!
}

input UserInput {
    name: String
    email: String
    userId: String!
    password: String!
}

input UpdateCategoryInput {
    name: String!
    id: Float!
}