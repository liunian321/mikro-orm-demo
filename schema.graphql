type Transaction {
    id: ID!
    user: User!
    type: String!
    amount: Float!
    timestamp: DateTime!
    createdAt: DateTime!
    updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
    id: ID!
    name: String!
    email: String
    balance: Float!
    transactions: [Transaction!]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Query {
    user(id: String!): User!
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    deposit(input: DepositInput!): User!
    withdraw(input: WithdrawInput!): User!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

input DepositInput {
    userId: String!
    amount: Float!
}

input WithdrawInput {
    userId: String!
    amount: Float!
}